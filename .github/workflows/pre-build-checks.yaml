name: Lints and unit tests

on:
  pull_request:
    branches: develop

jobs:
  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip3 install pre-commit

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure --color always
  pytest:
    name: Run Pytest
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLIENT_CONFIG: "{}"
      TELEGRAM_BOT_TOKEN: "fake_token"
      WEBHOOK_SECRET: "fake secret"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install poetry
        run: pip3 install poetry==1.4.2 setuptools
      - name: Disable venv create
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi
      - name: Pytest
        run: poetry run pytest -v
